---
name: jellyfin

services:
  jellyfin:
    image: jellyfin/jellyfin:${JELLYFIN_TAG:-latest}
    container_name: jellyfin
    user: ${JELLYFIN_UID:-1000}:${JELLYFIN_GID:-1000}
    environment:
      - TZ=${JELLYFIN_TZ:-America/Sao_Paulo}
      - JELLYFIN_PublishedServerUrl=https://jellyfin.${JELLYFIN_PUBLIC_DOMAIN}
    volumes:
      - config:/config
      - cache:/cache
      - media:/media
    ports:
      - 7359:7359 # local discovery
      - 1900:1900 # service discovery (DLNA)
    networks:
      proxy-network:
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.http.routers.jellyfin.rule: Host(`jellyfin.${JELLYFIN_PUBLIC_DOMAIN}`)
      traefik.http.services.jellyfin.loadbalancer.server.port: 8096

  jellyseerr:
    image: fallenbagel/jellyseerr:${JELLYSEERR_TAG:-latest}
    container_name: jellyseerr
    environment:
      - LOG_LEVEL=${JELLYSEER_LOG_LEVEL:-debug}
      - TZ=${JELLYSEER_TZ:-America/Sao_Paulo}
    volumes:
      - jellyseerr:/app/config
    networks:
      proxy-network:
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.http.routers.jellyseerr.rule: Host(`jellyseerr.${JELLYSEERR_PUBLIC_DOMAIN}`)
      traefik.http.services.jellyseerr.loadbalancer.server.port: 5055

  sonarr:
    image: ghcr.io/hotio/sonarr:${SONARR_TAG:-latest}
    container_name: sonarr
    environment:
      - TZ=${SONARR_TZ:-America/Sao_Paulo}
      - PUID=${SONARR_UID:-1200}
      - PGID=${SONARR_GID:-1000}
      - UMASK=${SONARR_UMAST:-002}
    volumes:
      - sonarr:/config
      - data:/data
    networks:
      proxy-network:
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.http.routers.sonarr.rule: Host(`sonarr.${SONARR_PUBLIC_DOMAIN}`)
      traefik.http.services.sonarr.loadbalancer.server.port: 8989

  radarr:
    image: ghcr.io/hotio/radarr:${RADARR_TAG:-latest}
    container_name: radarr
    environment:
      - TZ=${RADARR_TZ:-America/Sao_Paulo}
      - PUID=${RADARR_UID:-1300}
      - PGID=${RADARR_GID:-1000}
      - UMASK=${RADARR_UMAST:-002}
    volumes:
      - radarr:/config
      - data:/data
    networks:
      proxy-network:
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.http.routers.radarr.rule: Host(`radarr.${RADARR_PUBLIC_DOMAIN}`)
      traefik.http.services.radarr.loadbalancer.server.port: 7878

  prowlarr:
    image: ghcr.io/hotio/prowlarr:${PROWLARR_TAG:-latest}
    container_name: prowlarr
    environment:
      - TZ=${PROWLARR_TZ:-America/Sao_Paulo}
      - PUID=${PROWLARR_UID:-1400}
      - PGID=${PROWLARR_GID:-1000}
      - UMASK=${PROWLARR_UMAST:-002}
    volumes:
      - prowlarr:/config
    networks:
      proxy-network:
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.http.routers.prowlarr.rule: Host(`prowlarr.${PROWLARR_PUBLIC_DOMAIN}`)
      traefik.http.services.prowlarr.loadbalancer.server.port: 9696

volumes:
  data:
    external: true
    name: torrent_data
  media:
    driver_opts:
      type: nfs
      o: addr=${NFS_SERVER},rw,sync,nfsvers=4
      device: :${NFS_JELLYFIN_MEDIA_SHARE}
  config:
  cache:
  jellyseerr:
  sonarr:
  radarr:
  prowlarr:

networks:
  proxy-network:
    external: true
